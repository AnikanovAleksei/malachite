import os
import asyncio
from aiogram import Dispatcher, Bot
from dotenv import load_dotenv
from handlers.handlers import router as main_router
from handlers.order import handlers_router as order_router
from handlers.contact import router as manager_router
from handlers.help_handlers import router as helper_router
from database.models import async_main
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from database import requests as rq
from aiogram.types import FSInputFile
from aiogram.exceptions import TelegramForbiddenError

scheduler = AsyncIOScheduler(timezone="Europe/Moscow")


async def send_scheduled_message(bot: Bot):
    users = await rq.get_all_users()
    message_text = ("üå∏ –í–µ—Å–Ω–∞ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç ‚Äì —Ü–µ–Ω—ã —Ç–∞—é—Ç! üåû \n\n"
                    "–í –º–∞–≥–∞–∑–∏–Ω–µ Malachite.aps –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –≤–µ—Å–µ–Ω–Ω–∏—Ö –ø–µ—Ä–µ–º–µ–Ω! \n\n"
                    "–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –∞–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Ç–æ–ø–∏—Ç –∑–∏–º–Ω–∏–π —Ö–æ–ª–æ–¥, –≤–µ–¥—å –Ω–∞—à–∏ —Å–∫–∏–¥–∫–∏ "
                    "—Ç–∞–∫–∏–µ –∂–µ —Ç–µ–ø–ª—ã–µ, –∫–∞–∫ –ø–µ—Ä–≤—ã–µ –ª—É—á–∏ —Å–æ–ª–Ω—Ü–∞. \n\n"
                    
                    "üíª –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç? \n\n"
                    "- –°–∫–∏–¥–∫–∏ –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É. \n\n"
                    "- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –≥–∞–¥–∂–µ—Ç–æ–≤. \n\n"
                    "- –ü–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ! \n\n"
                    
                    "‚è≥ –ö–æ–≥–¥–∞? \n\n"
                    "–ê–∫—Ü–∏–∏ –±—É–¥—É—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –∏ –¥–µ–π—Å—Ç–≤—É—é—Ç 24 —á–∞—Å–∞! \n\n"
                    "üåø –ü–æ—Å–ø–µ—à–∏—Ç–µ, –ø–æ–∫–∞ –≤–µ—Å–µ–Ω–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Ä–∞—Å—Ç–∞—è–ª–∏ –≤–º–µ—Å—Ç–µ —Å–æ —Å–Ω–µ–≥–æ–º. \n\n"
                    "üîó –î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Ü–µ–Ω –∞–∫—Ü–∏–π –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º! \n\n")

    image_path = '/root/malachite/image/IMG_1553.JPG'  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º InputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    photo = FSInputFile(image_path)

    for user in users:
        if user.telegram_id:
            try:
                await bot.send_photo(chat_id=user.telegram_id, photo=photo, caption=message_text)
            except TelegramForbiddenError:
                print(f"Bot was blocked by the user {user.telegram_id}")
            except Exception as e:
                print(f"Failed to send message to user {user.telegram_id}: {e}")


async def main():
    load_dotenv()
    await async_main()
    bot = Bot(token=os.getenv('TOKEN_ID'))

    dp = Dispatcher()

    # –í–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
    dp.include_router(main_router)
    dp.include_router(order_router)
    dp.include_router(helper_router)
    dp.include_router(manager_router)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
    if not scheduler.get_job("daily_post"):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ 14:00
        scheduler.add_job(send_scheduled_message, 'cron', hour=17, minute=5, args=[bot], id="daily_post")

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler.start()

    await dp.start_polling(bot)

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
