from aiogram import Dispatcher, Bot
import asyncio
import os
from dotenv import load_dotenv
from handlers.handlers import router as handlers_router
from database.models import async_main
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from database import requests as rq
from aiogram.types import FSInputFile
from aiogram.exceptions import TelegramForbiddenError

scheduler = AsyncIOScheduler(timezone="Europe/Moscow")


async def send_scheduled_message(bot: Bot):
    users = await rq.get_all_users()
    message_text = ("üì¢ –ú–∞–≥–∞–∑–∏–Ω —Ç–µ—Ö–Ω–∏–∫–∏ Malachite APS! \n\n"

                    "üîπ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ \n\n"
                    "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –≤—Ä–µ–º—è, –ø–æ—ç—Ç–æ–º—É –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—É—é –¥–æ—Å—Ç–∞–≤–∫—É –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤. \n\n"
                    "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é —Ç–µ—Ö–Ω–∏–∫—É –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏! \n\n"

                    "üîπ –û—Ç–ª–∏—á–Ω—ã–µ —Ü–µ–Ω—ã \n\n"
                    "–ù–∞—à –º–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ª—É—á—à–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ. –ú—ã –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏–º—Å—è"
                    "–∫ —Ç–æ–º—É, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –≤—ã–≥–æ–¥–Ω—ã–º–∏ –¥–ª—è –≤–∞—Å. \n\n"

                    "üîπ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å \n\n"
                    "–ù–µ –Ω–∞—à–ª–∏ —Ç–æ, —á—Ç–æ –∏—Å–∫–∞–ª–∏ –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–µ–π"
                    "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –∏ –º—ã –Ω–∞–π–¥–µ–º –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ. \n\n"
        
                    "Malachite APS ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–∏–∫–∏! \n\n"
                    "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–∏–Ω–∫–∞–º–∏ –∏ —Å–ø–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏. \n\n")

    image_path = '/root/malachite/image/IMG_1438.JPG'  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º InputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    photo = FSInputFile(image_path)

    for user in users:
        if user.telegram_id:
            try:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
                await bot.send_photo(chat_id=user.telegram_id, photo=photo, caption=message_text)
            except TelegramForbiddenError:
                print(f"Bot was blocked by the user {user.telegram_id}")
            except Exception as e:
                print(f"Failed to send message to user {user.telegram_id}: {e}")


async def main():
    load_dotenv()
    await async_main()
    bot = Bot(token=os.getenv('TOKEN_ID'))

    dp = Dispatcher()
    dp.include_router(handlers_router)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
    if not scheduler.get_job("daily_post"):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ 14:00
        scheduler.add_job(send_scheduled_message, 'cron', hour=13, minute=35, args=[bot], id="daily_post")

    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    scheduler.start()

    await dp.start_polling(bot)


if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')
